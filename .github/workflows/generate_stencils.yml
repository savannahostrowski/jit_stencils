name: Generate JIT stencils

on:
    pull_request:
        branches:
            - main
        paths:
            - '!stencils/**'
    push:
        branches:
            - main
        # paths:
        #     - '!stencils/**'

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Build CPython
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        target:
          - i686-pc-windows-msvc/msvc
          - x86_64-pc-windows-msvc/msvc
          - aarch64-pc-windows-msvc/msvc
          - x86_64-apple-darwin/clang
          - aarch64-apple-darwin/clang
          - x86_64-unknown-linux-gnu/gcc
          - aarch64-unknown-linux-gnu/gcc
        include:
          - target: i686-pc-windows-msvc/msvc
            architecture: Win32
            runner: windows-latest
          - target: x86_64-pc-windows-msvc/msvc
            architecture: x64
            runner: windows-latest
          - target: aarch64-pc-windows-msvc/msvc
            architecture: ARM64
            runner: windows-latest
          - target: x86_64-apple-darwin/clang
            architecture: x86_64
            runner: macos-13
          - target: aarch64-apple-darwin/clang
            architecture: aarch64
            runner: macos-14
          - target: x86_64-unknown-linux-gnu/gcc
            architecture: x86_64
            runner: ubuntu-24.04
          - target: aarch64-unknown-linux-gnu/gcc
            architecture: aarch64
            runner: ubuntu-24.04
    steps:
      - name: Checkout CPython repository
        uses: actions/checkout@v4
        with:
          repository: python/cpython
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps and build CPython (Windows)
        run: |
            choco install llvm --allow-downgrade --no-progress --version 19.1.0
            ./PCbuild/build.bat --experimental-jit -p ${{ matrix.architecture }}
            stripped_target=$(echo ${{ matrix.target }} | sed 's|/|_|g')
            ./python Tools/jit/build.py $stripped_target
            mkdir -p stencils
            cp cpython/jit_stencils.h stencils/jit_stencils_${{ matrix.target }}.h

      - name: Install deps and build CPython (macOS)
        run: |
            brew update
            find /usr/local/bin -lname '*/Library/Frameworks/Python.framework/*' -delete
            brew install llvm@19
            export SDKROOT="$(xcrun --show-sdk-path)"
            ./configure --enable-experimental-jit
            make all --jobs 4
            stripped_target=$(echo ${{ matrix.target }} | sed 's|/|_|g')
            ./python.exe Tools/jit/build.py $stripped_target
            mkdir -p stencils
            cp cpython/jit_stencils.h stencils/jit_stencils_${{ matrix.target }}.h

      - name: Install deps and build CPython (Linux)
        run: |
            sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)" ./llvm.sh 19
            export PATH="$(llvm-config-19 --bindir):$PATH"
            ./configure --enable-experimental-jit
            make all --jobs 4
            ./python -m test --multiprocess 0 --timeout 4500 --verbose2 --verbose3
            stripped_target=$(echo ${{ matrix.target }} | sed 's|/|_|g')
            ./python Tools/jit/build.py $stripped_target
            mkdir -p stencils
            cp cpython/jit_stencils.h stencils/jit_stencils_${{ matrix.target }}.h

  push-to-repo:
    name: Push to repository
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Commit and push changes
        run: |
            git config --global user.email "GitHub Actions < [email protected]>"
            git config --global user.name "GitHub Actions"
            git add stencils
            git commit -m "Update JIT stencils"
            git push