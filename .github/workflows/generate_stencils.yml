name: JIT
on:
  pull_request:
    branches:
        - main
  push:
    branches:
        - main
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  jit:
    name: ${{ matrix.target }} 
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        target:
          - i686-pc-windows-msvc/msvc
          - x86_64-pc-windows-msvc/msvc
          - aarch64-pc-windows-msvc/msvc
          - x86_64-apple-darwin/clang
          - aarch64-apple-darwin/clang
          - x86_64-unknown-linux-gnu/gcc
          - aarch64-unknown-linux-gnu/gcc
        debug:
          - true
          - false
        llvm:
          - 19
        include:
          - target: i686-pc-windows-msvc/msvc
            architecture: Win32
            runner: windows-latest
          - target: x86_64-pc-windows-msvc/msvc
            architecture: x64
            runner: windows-latest
          - target: aarch64-pc-windows-msvc/msvc
            architecture: ARM64
            runner: windows-latest
          - target: x86_64-apple-darwin/clang
            architecture: x86_64
            runner: macos-13
          - target: aarch64-apple-darwin/clang
            architecture: aarch64
            runner: macos-14
          - target: x86_64-unknown-linux-gnu/gcc
            architecture: x86_64
            runner: ubuntu-24.04
          - target: aarch64-unknown-linux-gnu/gcc
            architecture: aarch64
            # Forks don't have access to our paid AArch64 runners. These jobs are skipped below:
            runner: ${{ github.repository_owner == 'python' && 'ubuntu-24.04-aarch64' || 'ubuntu-24.04' }}
    steps:
      - uses: actions/checkout@v4
        with:
            repository: python/cpython
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build and collect stencils
        run: |
            mkdir -p ../stencils
            stripped_target=$(echo "${{ matrix.target }}" | sed 's|/|_|g')
            if [[ $RUNNER_OS == "Windows" ]]; then
              choco install llvm --allow-downgrade --no-progress --version ${{ matrix.llvm }}.1.0
              ./PCbuild/build.bat --experimental-jit ${{ matrix.debug && '-d' || '' }} -p ${{ matrix.architecture }}
              cp jit_stencils.h ../stencils/jit_stencils_${stripped_target}.h
            elif [[ $RUNNER_OS == "macOS" ]]; then
              brew update
              find /usr/local/bin -lname '*/Library/Frameworks/Python.framework/*' -delete
              brew install llvm@${{ matrix.llvm }}
              export SDKROOT="$(xcrun --show-sdk-path)"
              ./configure --enable-experimental-jit ${{ matrix.debug && '--with-pydebug' || '' }}
              make all --jobs 4
              cp jit_stencils.h ../stencils/jit_stencils_${stripped_target}.h
            else
              sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)" ./llvm.sh ${{ matrix.llvm }}
              export PATH="$(llvm-config-${{ matrix.llvm }} --bindir):$PATH"
              ./configure --enable-experimental-jit ${{ matrix.debug && '--with-pydebug' || '' }}
              make all --jobs 4
              cp jit_stencils.h ../stencils/jit_stencils_${stripped_target}.h
            fi
  aggregate-and-push:
    name: Aggregate and Push Stencils
    needs: jit
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Aggregate stencils
        run: |
          mkdir -p stencils
          cp ../stencils/* ./stencils/

      - name: Commit and push stencils
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b add-jit-stencils
          git add stencils
          git commit -m "Add aggregated JIT stencils"
          git push origin add-jit-stencils

      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: 'add-jit-stencils',
              base: 'main',
              title: 'Add aggregated JIT stencils',
              body: 'This PR includes the aggregated JIT stencil files from all platforms.',
            });
            core.info(`Pull request created: ${pr.html_url}`);